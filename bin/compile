#!/usr/bin/env bash
# usage: bin/compile <build-dir> <cache-dir>

set -e

BUILD_DIR=$1
CACHE_DIR=$2
BASE_URL="https://s3-external-1.amazonaws.com/heroku-buildpack-ruby"
DEFAULT_RUBY_VERSION="2.1.2-p95"

function indent {
  sed -u 's/^/       /'
}

function install_node {
  echo "-----> Installing Node"
  node_url="https://s3.amazonaws.com/language-pack-ruby/node-0.4.7.tgz"

  if [ ! -d ${CACHE_DIR}/binaries ]; then
    mkdir -p $CACHE_DIR/binaries
  fi

  if [ ! -f ${CACHE_DIR}/binaries/node ]; then
    curl $node_url -s -o - | tar xzf - -C $CACHE_DIR/binaries/
  fi
  cp -ru $CACHE_DIR/binaries $BUILD_DIR/binaries
}


function download_yaml {
  tmpdir=.libyaml
  mkdir -p $tmpdir
  yaml_tar="$BASE_URL/libyaml-0.1.4.tgz"
  curl $yaml_tar -s -o - | tar xzf - -C $tmpdir/

  yaml_include_path="$tmpdir/include"
  yaml_lib_path="$tmpdir/lib"

  CPATH=$yaml_include_path:$CPATH
  CPPATH=$yaml_include_path:$CPPATH
  LIBRARY_PATH=$yaml_lib_path:$LIBRARY_PATH
}

function set_ruby_version {
  if [ -f ${BUILD_DIR}/.ruby-version ]; then
    RUBY_VERSION=$(cat ${BUILD_DIR}/.ruby-version)
  fi
}

function download_ruby {
  VERSION=${RUBY_VERSION:-$DEFAULT_RUBY_VERSION}

  if [ ! -d "$CACHE_DIR/ruby" ]; then
    echo "-----> Downloading Ruby $VERSION"
    mkdir -p $CACHE_DIR/ruby
    ruby_tar="$BASE_URL/ruby-$VERSION.tgz"
    curl $ruby_tar -s -o - | tar xzf - -C $CACHE_DIR/ruby
  fi
}

function copy_ruby_to_build_dir {
  echo "-----> Vendoring Ruby into slug"
  cp -ru $CACHE_DIR/ruby $BUILD_DIR/ruby
}

function install_ruby {
  download_yaml
  download_ruby
  copy_ruby_to_build_dir
}

function install_gems {
  PATH=$CACHE_DIR/ruby/bin:$PATH
  cd $BUILD_DIR
  echo "install: --no-ri --no-rdoc --env-shebang" > .gemrc
  cp .gemrc $HOME

  echo "-----> Install dep"
  gem install dep | indent

  echo "-----> Creating gemset"
  if [ ! -d "$CACHE_DIR/.gs" ]; then
    mkdir -p $CACHE_DIR/.gs
  fi

  mkdir -p $BUILD_DIR/.profile.d
  cat <<-EOF > $BUILD_DIR/.profile.d/gs.sh
    export GEM_HOME=\$HOME/.gs
    export GEM_PATH=\$HOME/.gs:$(gem env path | sed "s|$CACHE_DIR|\$HOME|")
    export PATH=\$HOME/.gs/bin:\$HOME/ruby/bin:bin:\$HOME/binaries:/usr/bin:/bin
    export RACK_ENV=production
EOF

  HOME=$CACHE_DIR source $BUILD_DIR/.profile.d/gs.sh

  cp $BUILD_DIR/.gems $CACHE_DIR

  echo "-----> Installing gems"
  cd $CACHE_DIR
  #TODO: use some kind of signal to clear the gem set on user demand by doing a rm -rf $CACHE_DIR/.gs
  dep install | indent
  cp -ru $CACHE_DIR/.gs $BUILD_DIR
}

set_ruby_version
install_node
install_ruby
install_gems
